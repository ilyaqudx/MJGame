// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usercards.proto

package com.gwsoft.server.game.protobuf;

public final class UserCardsProtobuf {
  private UserCardsProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 type = 1;
    boolean hasType();
    int getType();
    
    // required int32 num = 2;
    boolean hasNum();
    int getNum();
  }
  public static final class Card extends
      com.google.protobuf.GeneratedMessage
      implements CardOrBuilder {
    // Use Card.newBuilder() to construct.
    private Card(Builder builder) {
      super(builder);
    }
    private Card(boolean noInit) {}
    
    private static final Card defaultInstance;
    public static Card getDefaultInstance() {
      return defaultInstance;
    }
    
    public Card getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_Card_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_Card_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getType() {
      return type_;
    }
    
    // required int32 num = 2;
    public static final int NUM_FIELD_NUMBER = 2;
    private int num_;
    public boolean hasNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getNum() {
      return num_;
    }
    
    private void initFields() {
      type_ = 0;
      num_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, num_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, num_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_Card_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_Card_fieldAccessorTable;
      }
      
      // Construct using com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.getDescriptor();
      }
      
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card getDefaultInstanceForType() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.getDefaultInstance();
      }
      
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card build() {
        com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card buildPartial() {
        com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card result = new com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.num_ = num_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card) {
          return mergeFrom((com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card other) {
        if (other == com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasNum()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              num_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 type = 1;
      private int type_ ;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 num = 2;
      private int num_ ;
      public boolean hasNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getNum() {
        return num_;
      }
      public Builder setNum(int value) {
        bitField0_ |= 0x00000002;
        num_ = value;
        onChanged();
        return this;
      }
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Card)
    }
    
    static {
      defaultInstance = new Card(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Card)
  }
  
  public interface UserCardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .Card card = 1;
    java.util.List<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card> 
        getCardList();
    com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card getCard(int index);
    int getCardCount();
    java.util.List<? extends com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder> 
        getCardOrBuilderList();
    com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder getCardOrBuilder(
        int index);
  }
  public static final class UserCards extends
      com.google.protobuf.GeneratedMessage
      implements UserCardsOrBuilder {
    // Use UserCards.newBuilder() to construct.
    private UserCards(Builder builder) {
      super(builder);
    }
    private UserCards(boolean noInit) {}
    
    private static final UserCards defaultInstance;
    public static UserCards getDefaultInstance() {
      return defaultInstance;
    }
    
    public UserCards getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_UserCards_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_UserCards_fieldAccessorTable;
    }
    
    // repeated .Card card = 1;
    public static final int CARD_FIELD_NUMBER = 1;
    private java.util.List<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card> card_;
    public java.util.List<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card> getCardList() {
      return card_;
    }
    public java.util.List<? extends com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder> 
        getCardOrBuilderList() {
      return card_;
    }
    public int getCardCount() {
      return card_.size();
    }
    public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card getCard(int index) {
      return card_.get(index);
    }
    public com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder getCardOrBuilder(
        int index) {
      return card_.get(index);
    }
    
    private void initFields() {
      card_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getCardCount(); i++) {
        if (!getCard(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < card_.size(); i++) {
        output.writeMessage(1, card_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < card_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, card_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_UserCards_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.internal_static_UserCards_fieldAccessorTable;
      }
      
      // Construct using com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (cardBuilder_ == null) {
          card_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards.getDescriptor();
      }
      
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards getDefaultInstanceForType() {
        return com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards.getDefaultInstance();
      }
      
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards build() {
        com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards buildPartial() {
        com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards result = new com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards(this);
        int from_bitField0_ = bitField0_;
        if (cardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            card_ = java.util.Collections.unmodifiableList(card_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards) {
          return mergeFrom((com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards other) {
        if (other == com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards.getDefaultInstance()) return this;
        if (cardBuilder_ == null) {
          if (!other.card_.isEmpty()) {
            if (card_.isEmpty()) {
              card_ = other.card_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardIsMutable();
              card_.addAll(other.card_);
            }
            onChanged();
          }
        } else {
          if (!other.card_.isEmpty()) {
            if (cardBuilder_.isEmpty()) {
              cardBuilder_.dispose();
              cardBuilder_ = null;
              card_ = other.card_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardFieldBuilder() : null;
            } else {
              cardBuilder_.addAllMessages(other.card_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getCardCount(); i++) {
          if (!getCard(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder subBuilder = com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCard(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .Card card = 1;
      private java.util.List<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card> card_ =
        java.util.Collections.emptyList();
      private void ensureCardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          card_ = new java.util.ArrayList<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card>(card_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder, com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder> cardBuilder_;
      
      public java.util.List<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card> getCardList() {
        if (cardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(card_);
        } else {
          return cardBuilder_.getMessageList();
        }
      }
      public int getCardCount() {
        if (cardBuilder_ == null) {
          return card_.size();
        } else {
          return cardBuilder_.getCount();
        }
      }
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card getCard(int index) {
        if (cardBuilder_ == null) {
          return card_.get(index);
        } else {
          return cardBuilder_.getMessage(index);
        }
      }
      public Builder setCard(
          int index, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.set(index, value);
          onChanged();
        } else {
          cardBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCard(
          int index, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCard(com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.add(value);
          onChanged();
        } else {
          cardBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCard(
          int index, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.add(index, value);
          onChanged();
        } else {
          cardBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCard(
          com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.add(builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCard(
          int index, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCard(
          java.lang.Iterable<? extends com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card> values) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          super.addAll(values, card_);
          onChanged();
        } else {
          cardBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardBuilder_.clear();
        }
        return this;
      }
      public Builder removeCard(int index) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.remove(index);
          onChanged();
        } else {
          cardBuilder_.remove(index);
        }
        return this;
      }
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder getCardBuilder(
          int index) {
        return getCardFieldBuilder().getBuilder(index);
      }
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder getCardOrBuilder(
          int index) {
        if (cardBuilder_ == null) {
          return card_.get(index);  } else {
          return cardBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder> 
           getCardOrBuilderList() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(card_);
        }
      }
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder addCardBuilder() {
        return getCardFieldBuilder().addBuilder(
            com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.getDefaultInstance());
      }
      public com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder addCardBuilder(
          int index) {
        return getCardFieldBuilder().addBuilder(
            index, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.getDefaultInstance());
      }
      public java.util.List<com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder> 
           getCardBuilderList() {
        return getCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder, com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card, com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder, com.gwsoft.server.game.protobuf.UserCardsProtobuf.CardOrBuilder>(
                  card_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:UserCards)
    }
    
    static {
      defaultInstance = new UserCards(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:UserCards)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Card_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Card_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserCards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserCards_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017usercards.proto\"!\n\004Card\022\014\n\004type\030\001 \002(\005\022" +
      "\013\n\003num\030\002 \002(\005\" \n\tUserCards\022\023\n\004card\030\001 \003(\0132" +
      "\005.CardB4\n\037com.gwsoft.server.game.protobu" +
      "fB\021UserCardsProtobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Card_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Card_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Card_descriptor,
              new java.lang.String[] { "Type", "Num", },
              com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.class,
              com.gwsoft.server.game.protobuf.UserCardsProtobuf.Card.Builder.class);
          internal_static_UserCards_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_UserCards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserCards_descriptor,
              new java.lang.String[] { "Card", },
              com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards.class,
              com.gwsoft.server.game.protobuf.UserCardsProtobuf.UserCards.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
